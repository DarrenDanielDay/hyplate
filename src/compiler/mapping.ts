/**
 * @license MIT
 * Copyright (C) 2022  DarrenDanielDay <Darren_Daniel_Day@hotmail.com>
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
export const HTMLTagTypeMapping: Record<string, string> = {
  a: "HTMLAnchorElement",
  abbr: "HTMLElement",
  address: "HTMLElement",
  area: "HTMLAreaElement",
  article: "HTMLElement",
  aside: "HTMLElement",
  audio: "HTMLAudioElement",
  b: "HTMLElement",
  bdi: "HTMLElement",
  bdo: "HTMLElement",
  blockquote: "HTMLQuoteElement",
  br: "HTMLBRElement",
  button: "HTMLButtonElement",
  canvas: "HTMLCanvasElement",
  caption: "HTMLTableCaptionElement",
  cite: "HTMLElement",
  code: "HTMLElement",
  col: "HTMLTableColElement",
  colgroup: "HTMLTableColElement",
  data: "HTMLDataElement",
  datalist: "HTMLDataListElement",
  del: "HTMLModElement",
  details: "HTMLDetailsElement",
  dfn: "HTMLElement",
  dialog: "HTMLDialogElement",
  div: "HTMLDivElement",
  dl: "HTMLDListElement",
  dt: "HTMLElement",
  em: "HTMLElement",
  embed: "HTMLEmbedElement",
  fieldset: "HTMLFieldSetElement",
  figcaption: "HTMLElement",
  figure: "HTMLElement",
  footer: "HTMLElement",
  form: "HTMLFormElement",
  h1: "HTMLHeadingElement",
  h2: "HTMLHeadingElement",
  h3: "HTMLHeadingElement",
  h4: "HTMLHeadingElement",
  h5: "HTMLHeadingElement",
  h6: "HTMLHeadingElement",
  head: "HTMLHeadElement",
  header: "HTMLElement",
  hgroup: "HTMLElement",
  hr: "HTMLElement",
  i: "HTMLElement",
  iframe: "HTMLIFrameElement",
  img: "HTMLImageElement",
  input: "HTMLInputElement",
  ins: "HTMLModElement",
  kbd: "HTMLElement",
  label: "HTMLLabelElement",
  legend: "HTMLElement",
  li: "HTMLLIElement",
  link: "HTMLLinkElement",
  main: "HTMLElement",
  map: "HTMLMapElement",
  mark: "HTMLElement",
  menu: "HTMLMenuElement",
  meter: "HTMLMeterElement",
  nav: "HTMLElement",
  noscript: "HTMLElement",
  object: "HTMLObjectElement",
  ol: "HTMLOListElement",
  optgroup: "HTMLOptGroupElement",
  option: "HTMLOptionElement",
  output: "HTMLOutputElement",
  p: "HTMLParagraphElement",
  picture: "HTMLPictureElement",
  pre: "HTMLPreElement",
  progress: "HTMLProgressElement",
  q: "HTMLQuoteElement",
  rp: "HTMLElement",
  rt: "HTMLElement",
  ruby: "HTMLElement",
  s: "HTMLElement",
  samp: "HTMLElement",
  script: "HTMLScriptElement",
  section: "HTMLElement",
  select: "HTMLSelectElement",
  slot: "HTMLSlotElement",
  small: "HTMLElement",
  source: "HTMLSourceElement",
  span: "HTMLSpanElement",
  strong: "HTMLElement",
  style: "HTMLStyleElement",
  sub: "HTMLElement",
  summary: "HTMLElement",
  sup: "HTMLElement",
  table: "HTMLTableElement",
  tbody: "HTMLTableSectionElement",
  td: "HTMLTableCellElement",
  template: "HTMLTemplateElement",
  textarea: "HTMLTextAreaElement",
  tfoot: "HTMLTableSectionElement",
  th: "HTMLTableCellElement",
  thead: "HTMLTableSectionElement",
  time: "HTMLTimeElement",
  tr: "HTMLTableRowElement",
  track: "HTMLTrackElement",
  u: "HTMLElement",
  ul: "HTMLUListElement",
  var: "HTMLElement",
  video: "HTMLVideoElement",
  wbr: "HTMLElement",
};

export const SVGTagTypeMapping: Record<string, string> = {
  a: "SVGAElement",
  animate: "SVGAnimateElement",
  animateMotion: "SVGAnimateMotionElement",
  animateTransform: "SVGAnimateTransformElement",
  circle: "SVGCircleElement",
  clipPath: "SVGClipPathElement",
  defs: "SVGDefsElement",
  desc: "SVGDescElement",
  ellipse: "SVGEllipseElement",
  feBlend: "SVGFEBlendElement",
  feColorMatrix: "SVGFEColorMatrixElement",
  feComponentTransfer: "SVGFEComponentTransferElement",
  feComposite: "SVGFECompositeElement",
  feConvolveMatrix: "SVGFEConvolveMatrixElement",
  feDiffuseLighting: "SVGFEDiffuseLightingElement",
  feDisplacementMap: "SVGFEDisplacementMapElement",
  feDistantLight: "SVGFEDistantLightElement",
  feDropShadow: "SVGFEDropShadowElement",
  feFlood: "SVGFEFloodElement",
  feFuncA: "SVGFEFuncAElement",
  feFuncB: "SVGFEFuncBElement",
  feFuncG: "SVGFEFuncGElement",
  feFuncR: "SVGFEFuncRElement",
  feGaussianBlur: "SVGFEGaussianBlurElement",
  feImage: "SVGFEImageElement",
  feMerge: "SVGFEMergeElement",
  feMergeNode: "SVGFEMergeNodeElement",
  feMorphology: "SVGFEMorphologyElement",
  feOffset: "SVGFEOffsetElement",
  fePointLight: "SVGFEPointLightElement",
  feSpecularLighting: "SVGFESpecularLightingElement",
  feSpotLight: "SVGFESpotLightElement",
  feTile: "SVGFETileElement",
  feTurbulence: "SVGFETurbulenceElement",
  filter: "SVGFilterElement",
  foreignObject: "SVGForeignObjectElement",
  g: "SVGGElement",
  image: "SVGImageElement",
  line: "SVGLineElement",
  linearGradient: "SVGLinearGradientElement",
  marker: "SVGMarkerElement",
  mask: "SVGMaskElement",
  metadata: "SVGMetadataElement",
  mpath: "SVGMPathElement",
  path: "SVGPathElement",
  pattern: "SVGPatternElement",
  polygon: "SVGPolygonElement",
  polyline: "SVGPolylineElement",
  radialGradient: "SVGRadialGradientElement",
  rect: "SVGRectElement",
  script: "SVGScriptElement",
  set: "SVGSetElement",
  stop: "SVGStopElement",
  style: "SVGStyleElement",
  svg: "SVGSVGElement",
  switch: "SVGSwitchElement",
  symbol: "SVGSymbolElement",
  text: "SVGTextElement",
  textPath: "SVGTextPathElement",
  title: "SVGTitleElement",
  tspan: "SVGTSpanElement",
  use: "SVGUseElement",
  view: "SVGViewElement",
};
